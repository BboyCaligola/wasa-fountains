openapi: 3.0.0
info:
  description: Fontanelle app backend REST APIs
  title: Fontanelle APIs
  version: 1.0.0
servers:
  - url: http://localhost:3000

components:
  responses:
    BadRequest:
      description: The request was not compliant with the documentation (eg. missing fields, etc).

    InternalServerError:
      description: The server encountered an internal error. Further info in server logs.

  parameters:
    FountainID:
      schema:
        type: integer
        example: 1
        readOnly: true
      name: id
      in: path
      required: true
      description: Fountain ID

  schemas:
    Latitude:
      description: Location latitude in decimal degrees format.
      type: number
      format: float
      example: 12.34
      minimum: -90
      maximum: 90

    Longitude:
      description: Location longitude in decimal degrees format.
      type: number
      format: float
      example: 56.78
      minimum: -180
      maximum: 180

    Fountain:
      title: Fountain
      description: "This object represent a single Fountain (\"nasone\")."
      type: object
      properties:
        id:
          description: Unique fountain identifier.
          type: integer
          example: 1
          readOnly: true
        status:
          description: |-
            Describe the status of the fountain.
            If it's "good", the fountain is in working condition;
            if it's "faulty", the fountain is broken.
          type: string
          enum: ["good", "faulty"]
          example: good
        latitude: { $ref: "#/components/schemas/Latitude" }
        longitude: { $ref: "#/components/schemas/Longitude" }

paths:
  /fountains/:
    get:
      operationId: listFountains
      summary: Get the list of available fountains
      description: |-
        Return the list of all fountains in the system.
        If the client specifies a set of coordinates for a point,
        the list will be sorted by distance from that point
        and filtered for a range.
        Optionally, the client can specify a custom range.
      parameters:
        - name: latitude
          in: query
          required: false
          description: Latitude for sorting/finding fountains.
          schema: { $ref: "#/components/schemas/Latitude" }
        - name: longitude
          in: query
          required: false
          description: Longitude for sorting/finding fountains.
          schema: { $ref: "#/components/schemas/Longitude" }
        - name: range
          in: query
          required: false
          description: |-
            Range for the location filter. Default: 10.
            If coordinates are not specified, this parameter is ignored.
          schema:
            type: number
            format: float
            example: 12
            minimum: 1
            maximum: 200
      responses:
        "200":
          description: List of fountains
          content:
            application/json:
              schema:
                type: array
                items: { $ref: "#/components/schemas/Fountain" }
        "400": { $ref: "#/components/responses/BadRequest" }
        "500": { $ref: "#/components/responses/InternalServerError" }
    post:
      operationId: createFountain
      summary: Create a new fountain
      description: |-
        Create a new fountain using the properties in the request body.
        The server will create a new unique ID, the client can find it
        in the response.
      requestBody:
        content:
          application/json:
            schema: { $ref: "#/components/schemas/Fountain" }
      responses:
        "201":
          description: Fountain created successfully
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Fountain" }
        "400": { $ref: "#/components/responses/BadRequest" }
        "500": { $ref: "#/components/responses/InternalServerError" }

  /fountains/{id}:
    parameters:
      - $ref: "#/components/parameters/FountainID"
    put:
      operationId: updateFountain
      summary: Update fountain properties
      description: |-
        Replaces all fountains properties with the Fountain specified
        in the body of the request.
      requestBody:
        content:
          application/json:
            schema: { $ref: "#/components/schemas/Fountain" }
      responses:
        "200":
          description: Fountain updated successfully
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Fountain" }
        "400": { $ref: "#/components/responses/BadRequest" }
        "404": { description: Fountain not found }
        "500": { $ref: "#/components/responses/InternalServerError" }
    delete:
      operationId: deleteFountain
      summary: Remove a fountain
      description: Remove a fountain from the system.
      responses:
        "204": { description: Fountain deleted successfully }
        "400": { $ref: "#/components/responses/BadRequest" }
        "404": { description: Fountain not found }
        "500": { $ref: "#/components/responses/InternalServerError" }
